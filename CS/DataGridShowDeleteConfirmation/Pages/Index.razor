@page "/"

@using DataGridShowDeleteConfirmation.Data
@inject WeatherForecastService ForecastService

@if (forecasts == null) {
    <p><em>Loading...</em></p>
}
else {
    <DxGrid Data="@forecasts" CssClass="mw-1100" @ref="myGrid">
        <Columns>
            <DxGridCommandColumn Width="70px" NewButtonVisible="false">
                <CellDisplayTemplate Context="myContext">
                    <DxButton RenderStyle="ButtonRenderStyle.Link" RenderStyleMode="ButtonRenderStyleMode.Contained" Text="Delete" Click="@(() => OnDeleteButtonClick(myContext))" />
                </CellDisplayTemplate>
            </DxGridCommandColumn>
            <DxGridDataColumn Caption="Date" FieldName="Date" />
            <DxGridDataColumn Caption="Temperature" FieldName="TemperatureF"/>
        </Columns>
    </DxGrid>
    <DxPopup @bind-Visible="@ConfirmationShown" HeaderText="Delete a record" Width="auto" CloseOnOutsideClick="false">
        <BodyContentTemplate>
            <p>You are about to delete the record with the id = @id. Are you sure?</p>
            <div class="confirm-dialog-buttons">
                <DxButton Text="Yes" RenderStyle="ButtonRenderStyle.Primary" Click="@OnYesButtonClick" />
                <DxButton Text="No" RenderStyle="ButtonRenderStyle.Secondary" Click="@OnNoButtonClick" />
            </div>
        </BodyContentTemplate>
    </DxPopup>
}

@code {
    bool ConfirmationShown { get; set; } = false;
    IGrid myGrid { get; set; }
    Int32 id { get; set; }

    List<WeatherForecast> forecasts;

    protected override async Task OnInitializedAsync() {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }

    void OnDeleteButtonClick(GridCommandColumnCellDisplayTemplateContext context) {
        id = (context.DataItem as WeatherForecast).ID;
        ConfirmationShown = true;
    }

    void OnYesButtonClick() {
        forecasts.Remove(forecasts.Find(m => m.ID == id));
        myGrid.Reload();
        ConfirmationShown = false;
    }

    void OnNoButtonClick() {
        ConfirmationShown = false;
    }
}

<style>
    .confirm-dialog-buttons {
        display: flex;
    }

    .confirm-dialog-buttons .dxbl-btn:nth-of-type(1) {
        margin-left: auto;
    }

    .confirm-dialog-buttons .dxbl-btn:nth-of-type(2) {
        margin-left: 0.5rem;
    }
</style>
