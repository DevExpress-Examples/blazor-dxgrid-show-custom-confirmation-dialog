@page "/"

@using DataGridShowDeleteConfirmation.Data
@inject WeatherForecastService ForecastService

@if (forecasts == null) {
    <p><em>Loading...</em></p>
}
else {
    <DxGrid Data="@forecasts" CssClass="mw-1100" @ref="myGrid" RowClick="OnRowClick">
        <Columns>
            <DxGridDataColumn Caption="Date" FieldName="Date" />
            <DxGridDataColumn Caption="Temperature" FieldName="TemperatureF" />
            <DxGridDataColumn Name="Delete" Caption="Edit">
            <CellDisplayTemplate>
                <DxButton RenderStyle="ButtonRenderStyle.Link" RenderStyleMode="ButtonRenderStyleMode.Contained" Text="Delete" Click="@OnDeleteButtonClick"/>
            </CellDisplayTemplate>
        </DxGridDataColumn>
        </Columns>
    </DxGrid>
    <DxPopup @bind-Visible="@popupVisible" HeaderText="Please confirm" Width="auto" CloseOnOutsideClick="false">
         You are about to delete this record. Are you sure?
         <div class="dxbs-grid-confirm-dialog-buttons">
             <DxButton Text="Cancel " RenderStyle="ButtonRenderStyle.Success" Click="@OnCancelButtonClick"/>
             <DxButton Text="Confirm" RenderStyle="ButtonRenderStyle.Danger" Click="@OnConfirmButtonClick" />                 
         </div>
    </DxPopup>   
}

@code {
    bool popupVisible { get; set; } = false;
    IGrid myGrid { get; set; }
    Int32 rowIndex { get; set; }

    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync() {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }

    void OnRowClick(GridRowClickEventArgs e) {
        if (e.Column.Name == "Delete")
            rowIndex = e.VisibleIndex;
    }

    void OnDeleteButtonClick(MouseEventArgs args) {
        popupVisible = true;
    }

    void OnConfirmButtonClick(MouseEventArgs args) {
        WeatherForecast itemToDelete = myGrid.GetDataItem(rowIndex) as WeatherForecast;
        int dataSourceIndex = Array.IndexOf(forecasts, itemToDelete);
        forecasts = forecasts.Where((value, index) => index != dataSourceIndex).ToArray();
        myGrid.Reload();
        popupVisible = false;
    }

    void OnCancelButtonClick(MouseEventArgs args) {
        popupVisible = false;
    }
}
